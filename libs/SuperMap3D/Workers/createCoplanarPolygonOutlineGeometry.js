define(["./EllipsoidRhumbLine-d305ae76","./buildModuleUrl-9a89655b","./Cartesian4-69ef58e5","./Check-7b2a090c","./FeatureDetection-ab6f364c","./CoplanarPolygonGeometryLibrary-635ef9ab","./when-b60132fc","./GeometryAttribute-f3b3c776","./GeometryAttributes-252e9929","./PolygonGeometryLibrary-8e7f000d","./GeometryPipeline-ff15c36b","./IndexDatatype-d62ee188","./PrimitiveType-ebb8c588","./Math-119be1a3","./Cartographic-00721f3e","./Cartesian2-99e64452","./WebGLConstants-aba9fc67","./OrientedBoundingBox-43298817","./EllipsoidTangentPlane-d397ceb5","./Plane-622eaee2","./Transforms-f4127659","./earcut-2.2.1-20c8012f","./AttributeCompression-cd5fdf14","./EncodedCartesian3-3bcc61bb"],(function(e,r,t,n,o,i,a,y,l,c,u,p,s,d,f,m,b,g,h,P,v,G,L,C){"use strict";function T(e){for(var r=e.length,t=new Float64Array(3*r),n=p.IndexDatatype.createTypedArray(r,2*r),i=0,a=0,c=0;c<r;c++){var u=e[c];t[i++]=u.x,t[i++]=u.y,t[i++]=u.z,n[a++]=c,n[a++]=(c+1)%r}var d=new l.GeometryAttributes({position:new y.GeometryAttribute({componentDatatype:o.ComponentDatatype.DOUBLE,componentsPerAttribute:3,values:t})});return new y.Geometry({attributes:d,indices:n,primitiveType:s.PrimitiveType.LINES})}function k(e){var r=(e=a.defaultValue(e,a.defaultValue.EMPTY_OBJECT)).polygonHierarchy;this._polygonHierarchy=r,this._workerName="createCoplanarPolygonOutlineGeometry",this.packedLength=c.PolygonGeometryLibrary.computeHierarchyPackedLength(r)+1}k.fromPositions=function(e){return new k({polygonHierarchy:{positions:(e=a.defaultValue(e,a.defaultValue.EMPTY_OBJECT)).positions}})},k.pack=function(e,r,t){return t=a.defaultValue(t,0),r[t=c.PolygonGeometryLibrary.packPolygonHierarchy(e._polygonHierarchy,r,t)]=e.packedLength,r};var E={polygonHierarchy:{}};return k.unpack=function(e,r,t){r=a.defaultValue(r,0);var n=c.PolygonGeometryLibrary.unpackPolygonHierarchy(e,r);r=n.startingIndex,delete n.startingIndex;var o=e[r];return a.defined(t)||(t=new k(E)),t._polygonHierarchy=n,t.packedLength=o,t},k.createGeometry=function(n){var o=n._polygonHierarchy,a=o.positions;if(!((a=e.arrayRemoveDuplicates(a,t.Cartesian3.equalsEpsilon,!0)).length<3)&&i.CoplanarPolygonGeometryLibrary.validOutline(a)){var l=c.PolygonGeometryLibrary.polygonOutlinesFromHierarchy(o,!1);if(0!==l.length){for(var p=[],s=0;s<l.length;s++){var d=new c.GeometryInstance({geometry:T(l[s])});p.push(d)}var f=u.GeometryPipeline.combineInstances(p)[0],m=r.BoundingSphere.fromPoints(o.positions);return new y.Geometry({attributes:f.attributes,indices:f.indices,primitiveType:f.primitiveType,boundingSphere:m})}}},function(e,t){return a.defined(t)&&(e=k.unpack(e,t)),e._ellipsoid=r.Ellipsoid.clone(e._ellipsoid),k.createGeometry(e)}}));
