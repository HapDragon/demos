{"version":3,"sources":["webpack:///./src/modules/cesium/SunlightAnalysis/test.vue","webpack:///./src/modules/cesium/SunlightAnalysis/test.vue?4ffe"],"names":["id","ENTITYPRE","gui","name","components","maingis","computed","sunla","wgspoilist","viewer","CesiumViewer","getInstance","onleftclick","e","wgs84pos","GetPickedRayPositionWGS84","position","push","longitude","latitude","cartesianposlist","map","item","CoordinateWGS84","ToCartesian","length","SetEntity","Cesium","Entity","polyline","positions","material","Color","width","clampToGround","polygon","hierarchy","PolygonHierarchy","outline","outlineColor","GREEN","YELLOW","withAlpha","perPositionHeight","heightReference","HeightReference","NONE","onrightclick","movement","Bus","VM","$off","SignalType","Scene_Mouse_Left_Click","Scene_Mouse_Right_Click","RemoveEntities","messagePrompt","vals","params","timespan","split","timeset","Number","lonlatlist","pointspan","span","pointbottomheight","bottomheight","pointextrudeheight","extrudeheight","showpolygon","showpoints","timesetting","UpdatePolygon","onleftclick2","GetSunlightCoverate","rate","notifyPrompt","toString","onrightclick2","dat","GUI","domElement","style","setpolygon","$on","polygonheight","pointsize","getRate","add","onChange","value","setpolygonvisible","setpointsvisible","updatePolygonheight","UpdateExtrudeheight","Updatebottomheight","Updatepointspan","Updatepointsize","UpdateDateTime","methods","watch","remove","__exports__","render"],"mappings":"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","file":"js/chunk-2d0c91e7.ee84d930.js","sourcesContent":["<!--\r\n * Created by wqy\r\n * Date 2023/10/26 8:48\r\n * Description\r\n-->\r\n<template>\r\n    <div id=\"test\">\r\n        <maingis></maingis>\r\n<!--        <div id=\"mapContainer\" class=\"width100percent height100percent\" style=\"position: absolute;\"></div>-->\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import {SunlightAnalysis} from '../spatialAnalysis/components/SpaceAnalysis/sunLightAnalysis/buss/sunlightanalysis.js'\r\n    import maingis from \"../common/components/MainGIS\";\r\n    import spatialtools from \"../spatialAnalysis/components/SpatialTools\";\r\n    import cesiumUtil from '@/modules/cesium/common/buss/CesiumViewer'\r\n    import Bus from '@/common/buss/Bus'\r\n    import coordinate from '@/common/util/Coordinates'\r\n    const ENTITYPRE=\"SPACEANALYSISSUNLIGHT\";\r\n    import msgUtil from '@/common/util/MessageUtil'\r\n    let gui;\r\n    export default {\r\n        name: \"test\",\r\n        data() {\r\n            return {};\r\n        },\r\n\r\n        components:{\r\n            maingis,\r\n        },\r\n        computed: {},\r\n        mounted() {\r\n\r\n            let wgspoilist = [\r\n                [121.49307974622607, 31.243547046415536],\r\n                [121.49076172820271, 31.242385751273034],\r\n                [121.49083894325285, 31.239733580453102],\r\n                [121.4916756515493, 31.238490999407098],\r\n                [121.49659981037316, 31.240378266758714],\r\n                [121.49646231483939, 31.242481354731478],\r\n                [121.49609181609966, 31.2445681263834],\r\n                // [121.50192541854855,31.242595045026803],\r\n                // [121.50476009669899,31.237163865276983],\r\n                // [121.50857384475074,31.237997711690365],\r\n                // [121.50484970363361,31.243828328865213],\r\n                // [121.5025047661941,31.243693546701284 ]\r\n            ];\r\n\r\n\r\n\r\n            let viewer=cesiumUtil.CesiumViewer.getInstance().viewer;\r\n            let sunla;\r\n            // cesiumUtil.CesiumViewer.getInstance().FlyToWithDuration(\r\n            //     40.734845184754015,\r\n            //     -74.01074424918,\r\n            //     13906.429015767293,\r\n            //     Cesium.Math.toDegrees(0.6689803410420128),\r\n            //     Cesium.Math.toDegrees(-1.3316371578275459), 0);\r\n\r\n            // x=-74.01074424918,y=40.734845184754015,z=13906.429015767293,heading=0.6689803410420128,pitch=-1.3316371578275459,roll=0.000148065299478084\r\n\r\n            // let sunla=new SunlightAnalysis({\r\n            //     viewer:viewer,\r\n            //     lonlatlist:wgspoilist,\r\n            //     timesetting:[2023,10,20,10,12]\r\n            //     // timesetting:[2023,10,26,10,12]\r\n            //     // timesetting:[2023,10,22,6,18]\r\n            // });\r\n\r\n\r\n            function onleftclick(e){\r\n                let wgs84pos=cesiumUtil.CesiumViewer.getInstance().GetPickedRayPositionWGS84(e.position);\r\n                if(wgs84pos==null) return;\r\n                wgspoilist.push([wgs84pos.longitude,wgs84pos.latitude]);\r\n                let cartesianposlist=wgspoilist.map(item=>{return (new coordinate.CoordinateWGS84(item[0],item[1],0)).ToCartesian()});\r\n                if(wgspoilist.length==1) return;\r\n                if(wgspoilist.length==2) {\r\n                    //画线\r\n                    cesiumUtil.CesiumViewer.getInstance().SetEntity(new Cesium.Entity({\r\n                        id: ENTITYPRE+\"drawregion\",\r\n                        polyline: {\r\n                            positions: cartesianposlist,\r\n                            material: new Cesium.Color(0, 1, 0, 1),\r\n                            width: 2,\r\n                            clampToGround: false\r\n                        }\r\n                    }));\r\n                }\r\n                else{\r\n                    //画多边形\r\n                    cesiumUtil.CesiumViewer.getInstance().SetEntity({\r\n                        id: ENTITYPRE+ \"drawregion\",\r\n                        polygon: {\r\n                            hierarchy: new Cesium.PolygonHierarchy(cartesianposlist),\r\n                            // fill:Cesium.Color.GREEN,\r\n                            outline:true,\r\n                            outlineColor:Cesium.Color.GREEN,\r\n                            material: Cesium.Color.YELLOW.withAlpha(0.6),\r\n                            // 这里不能用贴地polygon或polyline，否则会影响离屏渲染\r\n                            perPositionHeight:true,\r\n                            // classificationType: Cesium.ClassificationType.CESIUM_3D_TILE,\r\n                            // 这里不能用贴地polygon或polyline，会影响离屏渲染\r\n                            heightReference:Cesium.HeightReference.NONE,\r\n                            // heightReference:Cesium.HeightReference.CLAMP_TO_GROUND\r\n                            // perPositionHeight: true //该属性代表使用每个点的高程，如果不设置则会贴地\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n            function onrightclick(movement){\r\n                Bus.VM.$off(Bus.SignalType.Scene_Mouse_Left_Click,onleftclick);\r\n                Bus.VM.$off(Bus.SignalType.Scene_Mouse_Right_Click,onrightclick);\r\n\r\n                cesiumUtil.CesiumViewer.getInstance().RemoveEntities(ENTITYPRE);\r\n                if(wgspoilist.length<3){\r\n                    msgUtil.messagePrompt('warning', 'Sunlight Analysis polygon should contain at least three points');\r\n                    return;\r\n                }\r\n                if(sunla==null){\r\n                    const vals=params.timespan.split(',');\r\n                    const timeset=[Number(vals[0]),Number(vals[1]),Number(vals[2]),Number(vals[3]),Number(vals[4])];\r\n\r\n                    sunla=new SunlightAnalysis({\r\n                        viewer:viewer,\r\n                        lonlatlist:\r\n                            wgspoilist,\r\n                        pointspan:params.span,\r\n                        pointbottomheight:params.bottomheight,\r\n                        pointextrudeheight:params.extrudeheight,\r\n                        showpolygon:params.showpolygon,\r\n                        showpoints:params.showpoints,\r\n                        timesetting:timeset\r\n                    })\r\n                }\r\n                else{\r\n                    sunla.UpdatePolygon(\r\n                        wgspoilist\r\n                    );\r\n                    // sunla.UpdateDateTime(startTime.getFullYear(),startTime.getMonth()+1,startTime.getDate(),startTime.getHours(),endTime.getHours())\r\n                }\r\n\r\n            }\r\n\r\n            function onleftclick2(e){\r\n                sunla.GetSunlightCoverate(e.position,function (rate) {\r\n                    msgUtil.notifyPrompt('SunlightCoverageRate', (rate*100).toString()+\"%\");\r\n                })\r\n            }\r\n            function onrightclick2(movement){\r\n                Bus.VM.$off(Bus.SignalType.Scene_Mouse_Left_Click,onleftclick2);\r\n                Bus.VM.$off(Bus.SignalType.Scene_Mouse_Right_Click,onrightclick2);\r\n            }\r\n\r\n            gui = new dat.gui.GUI();\r\n            gui.domElement.style = 'position:absolute;top:10px;left:10px;';\r\n\r\n            const params={\r\n                setpolygon:function () {\r\n                    wgspoilist=[];\r\n                    Bus.VM.$off(Bus.SignalType.Scene_Mouse_Left_Click,onleftclick);\r\n                    Bus.VM.$off(Bus.SignalType.Scene_Mouse_Right_Click,onrightclick);\r\n                    Bus.VM.$on(Bus.SignalType.Scene_Mouse_Left_Click,onleftclick);\r\n                    Bus.VM.$on(Bus.SignalType.Scene_Mouse_Right_Click,onrightclick);\r\n                },\r\n                showpolygon:false,\r\n                showpoints:true,\r\n                extrudeheight:200,\r\n                bottomheight:20,\r\n                span:20,\r\n                polygonheight:80,\r\n                pointsize:6,\r\n                timespan:'2023,12,22,6,18',\r\n                getRate:function () {\r\n                    if(sunla==null) return;\r\n                    Bus.VM.$off(Bus.SignalType.Scene_Mouse_Left_Click,onleftclick2);\r\n                    Bus.VM.$off(Bus.SignalType.Scene_Mouse_Right_Click,onrightclick2);\r\n                    Bus.VM.$on(Bus.SignalType.Scene_Mouse_Left_Click,onleftclick2);\r\n                    Bus.VM.$on(Bus.SignalType.Scene_Mouse_Right_Click,onrightclick2);\r\n                }\r\n            }\r\n\r\n            gui.add(params,'setpolygon');\r\n            gui.add(params,'showpolygon').onChange(function (value){\r\n                if(sunla==null) return;\r\n                debugger\r\n                sunla.setpolygonvisible(value);\r\n            });\r\n            gui.add(params,'showpoints').onChange(function (value){\r\n                if(sunla==null) return;\r\n                sunla.setpointsvisible(value);\r\n            });\r\n            gui.add(params,'polygonheight',0,500,1).onChange(function (value) {\r\n                if(sunla==null) return;\r\n                debugger\r\n                sunla.updatePolygonheight(value);\r\n            });\r\n            gui.add(params,'extrudeheight',0,500,1).onChange(function (value){\r\n                if(sunla==null) return;\r\n                sunla.UpdateExtrudeheight(value);\r\n            });\r\n            gui.add(params,'bottomheight',0,500,1).onChange(function (value){\r\n                if(sunla==null) return;\r\n                sunla.Updatebottomheight(value);\r\n            });\r\n            gui.add(params,'span',0,100,1).onChange(function (value){\r\n                if(sunla==null) return;\r\n                sunla.Updatepointspan(value);\r\n            });\r\n            gui.add(params,'pointsize',0,30,1).onChange(function (value) {\r\n                if(sunla==null) return;\r\n                sunla.Updatepointsize(value);\r\n            })\r\n            gui.add(params,'timespan').onChange(function (value) {\r\n                if(sunla==null) return;\r\n                const vals=value.split(',');\r\n                sunla.UpdateDateTime(vals[0],vals[1],vals[2],vals[3],vals[4]);\r\n            });\r\n            gui.add(params,'getRate').name('GetSunlightRate');\r\n\r\n\r\n\r\n\r\n\r\n        },\r\n        methods: {},\r\n        watch: {},\r\n        beforeRouteLeave() {\r\n            if (gui == null) return;\r\n            gui.domElement.remove();\r\n        },\r\n    }\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>","import { render } from \"./test.vue?vue&type=template&id=b5edbb60\"\nimport script from \"./test.vue?vue&type=script&lang=js\"\nexport * from \"./test.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"C:\\\\work\\\\study\\\\demos\\\\node_modules\\\\vue-loader-v16\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"sourceRoot":""}